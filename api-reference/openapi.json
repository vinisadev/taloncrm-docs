{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "description": "Returns the current health status of the API server including uptime and timestamp",
        "operationId": "AppController_getHealthCheck",
        "parameters": [],
        "responses": {
          "200": {
            "description": "API is healthy and running",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckDto"
                }
              }
            }
          }
        },
        "summary": "Health Check",
        "tags": [
          "System"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "description": "Creates a new user account and returns a JWT access token",
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "JWT access token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "email": {
                          "type": "string",
                          "description": "User email"
                        },
                        "name": {
                          "type": "string",
                          "description": "User name",
                          "nullable": true
                        },
                        "role": {
                          "type": "string",
                          "description": "User role",
                          "enum": [
                            "ADMIN",
                            "USER"
                          ]
                        },
                        "organizationId": {
                          "type": "string",
                          "description": "Organization ID"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or organization not found"
          },
          "409": {
            "description": "User with this email already exists"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "description": "Authenticates a user with email and password, returns JWT access token",
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "JWT access token"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "email": {
                          "type": "string",
                          "description": "User email"
                        },
                        "name": {
                          "type": "string",
                          "description": "User name",
                          "nullable": true
                        },
                        "role": {
                          "type": "string",
                          "description": "User role",
                          "enum": [
                            "ADMIN",
                            "USER"
                          ]
                        },
                        "organizationId": {
                          "type": "string",
                          "description": "Organization ID"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "Login user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "description": "Returns the authenticated user profile information",
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID"
                    },
                    "email": {
                      "type": "string",
                      "description": "User email"
                    },
                    "name": {
                      "type": "string",
                      "description": "User name",
                      "nullable": true
                    },
                    "role": {
                      "type": "string",
                      "description": "User role",
                      "enum": [
                        "ADMIN",
                        "USER"
                      ]
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization ID"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Account creation date"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last update date"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing JWT token"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get user profile",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/validate": {
      "get": {
        "description": "Validates the JWT token and returns user information if valid",
        "operationId": "AuthController_validateToken",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean",
                      "description": "Token validity status"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "email": {
                          "type": "string",
                          "description": "User email"
                        },
                        "name": {
                          "type": "string",
                          "description": "User name",
                          "nullable": true
                        },
                        "role": {
                          "type": "string",
                          "description": "User role",
                          "enum": [
                            "ADMIN",
                            "USER"
                          ]
                        },
                        "organizationId": {
                          "type": "string",
                          "description": "Organization ID"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing JWT token"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Validate JWT token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/contacts": {
      "get": {
        "description": "Returns all contacts for the authenticated user organization. Results are automatically filtered by organization ID.",
        "operationId": "ContactsController_getContacts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Contacts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contacts retrieved successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "email": {
                          "type": "string",
                          "description": "User email"
                        },
                        "name": {
                          "type": "string",
                          "description": "User name",
                          "nullable": true
                        },
                        "role": {
                          "type": "string",
                          "description": "User role",
                          "enum": [
                            "ADMIN",
                            "USER"
                          ]
                        },
                        "organizationId": {
                          "type": "string",
                          "description": "Organization ID"
                        }
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Organization ID"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing JWT token"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Get all contacts",
        "tags": [
          "Contacts"
        ]
      },
      "post": {
        "description": "Creates a new contact in the system. Requires ADMIN role. Contact is automatically associated with the user organization.",
        "operationId": "ContactsController_createContext",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Contact creation data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDto"
              },
              "examples": {
                "example1": {
                  "summary": "Basic contact",
                  "description": "Create a contact with minimal information",
                  "value": {
                    "firstName": "John",
                    "lastName": "Doe",
                    "email": "john.doe@example.com"
                  }
                },
                "example2": {
                  "summary": "Full contact",
                  "description": "Create a contact with all available fields",
                  "value": {
                    "firstName": "Jane",
                    "lastName": "Smith",
                    "email": "jane.smith@example.com",
                    "phone": "+1234567890",
                    "company": "Example Inc"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contact created successfully"
                    },
                    "contact": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "Contact first name"
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Contact last name"
                        },
                        "email": {
                          "type": "string",
                          "description": "Contact email address",
                          "nullable": true
                        },
                        "phone": {
                          "type": "string",
                          "description": "Contact phone number",
                          "nullable": true
                        },
                        "company": {
                          "type": "string",
                          "description": "Contact company",
                          "nullable": true
                        }
                      }
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "Email of the user who created the contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid contact data provided"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing JWT token"
          },
          "403": {
            "description": "Forbidden - Admin role required"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Create a new contact",
        "tags": [
          "Contacts"
        ]
      }
    }
  },
  "info": {
    "title": "TalonCRM API",
    "description": "A comprehensive Customer Relationship Management API for managing contacts, interactions, and sales pipelines",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication, registration, and profile management"
    },
    {
      "name": "Contacts",
      "description": "Contact management and organization"
    },
    {
      "name": "Interactions",
      "description": "Customer interaction tracking and history"
    },
    {
      "name": "Pipelines",
      "description": "Sales pipeline and opportunity management"
    },
    {
      "name": "Reports",
      "description": "Business analytics and reporting functionality"
    },
    {
      "name": "System",
      "description": "System health and monitoring endpoints"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://api.taloncrm.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT token"
      }
    },
    "schemas": {
      "HealthCheckDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Current health status of the API",
            "example": "ok",
            "enum": [
              "ok",
              "error"
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "Current timestamp when the health check was performed",
            "example": "2024-01-15T10:30:45.123Z",
            "format": "date-time"
          },
          "uptime": {
            "type": "number",
            "description": "Process uptime in seconds",
            "example": 123.456
          }
        },
        "required": [
          "status",
          "timestamp",
          "uptime"
        ]
      },
      "RegisterRequestDto": {
        "type": "object",
        "properties": {}
      },
      "LoginRequestDto": {
        "type": "object",
        "properties": {}
      },
      "CreateContactDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}